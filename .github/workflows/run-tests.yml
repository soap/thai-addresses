name: run-tests

on:
  push:
    branches: [main, develop]
    paths-ignore:
      - "**.md"
      - "docs/**"
  pull_request:
    branches: [main, develop]
    paths-ignore:
      - "**.md"
      - "docs/**"

jobs:
  test:
    runs-on: ${{ matrix.os }}

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: thai_addresses_package_test
          MYSQL_USER: testuser
          MYSQL_PASSWORD: testpass
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping -h 127.0.0.1 -uroot -proot"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=10

    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        php: [8.2, 8.3]
        laravel: [10.*, 11.*, 12.*]
        stability: [prefer-stable]
        include:
          - laravel: 10.*
            testbench: 8.*
            packagetools: 1.16.*
          - laravel: 11.*
            testbench: 9.*
            packagetools: 1.16.*
          - laravel: 12.*
            testbench: 10.*
            packagetools: 1.92.*

    name: PHP${{ matrix.php }} - L${{ matrix.laravel }} - ${{ matrix.os }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite, pdo_mysql, bcmath, soap, intl, gd, exif, iconv, imagick, fileinfo
          coverage: none

      - name: Setup problem matchers
        run: |
          echo "::add-matcher::${{ runner.tool_cache }}/php.json"
          echo "::add-matcher::${{ runner.tool_cache }}/phpunit.json"

      - name: Install dependencies
        run: |
          composer require "laravel/framework:${{ matrix.laravel }}" "orchestra/testbench:${{ matrix.testbench }}" "spatie/laravel-package-tools:${{ matrix.packagetools }}" --no-interaction --no-update
          composer update --${{ matrix.stability }} --prefer-dist --no-interaction

      - name: Wait for MySQL
        run: |
          until mysqladmin ping -h 127.0.0.1 -uroot -proot --silent; do
            echo "⏳ Waiting for MySQL..."
            sleep 3
          done
          echo "✅ MySQL is ready!"

      - name: Create testing database
        run: |
          mysql -h 127.0.0.1 -uroot -proot -e "CREATE DATABASE IF NOT EXISTS thai_addresses_package_test CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci;"
          mysql -h 127.0.0.1 -uroot -proot -e "SHOW DATABASES;"
        
      - name: Execute tests
        env:
          DB_CONNECTION: mysql
          DB_HOST: 127.0.0.1
          DB_PORT: 3306
          DB_DATABASE: thai_addresses_package_test
          DB_USERNAME: root
          DB_PASSWORD: root
        run: vendor/bin/pest
